# Extracts data from page and saves it to Obsidian vault
# via https://github.com/coddingtonbear/obsidian-local-rest-api
$op: sys.define
constants:
  # API key in the 'Local REST API' section of your settings in Obsidian.
  # Save it as `token` in `secrets`
  token:
    $op: get
    key: token
  html:
    $op: doc.get
    key:
      - documentElement
      - outerHTML
functions:
  obsidianRequest:
    $op: sys.exec
    op: http.request
    config:
      $op: update
      properties:
        url:
          $op: str.join
          values:
            # Address of your Obsidian REST API
            - http://127.0.0.1:27123
            - $op: get
              key: path
        headers:
          $op: update
          properties:
            Authorization:
              $op: str.join
              values:
                - "Bearer "
                - $op: sys.get
                  key: token
          source:
            $op: get
            key: headers
            default: {}
for:
  $op: pipe
  do:
    - url:
        $op: doc.get
        key:
          - location
          - href
      readability:
        $op: html.readability
        html:
          $op: sys.get
          key: html
      metadata:
        $op: html.metadata
        html:
          $op: sys.get
          key: html
      selection:
        $op: doc.selection
    - $op: update
      properties:
        text:
          $op: html.markdown
          html:
            $op: get
            key:
              - readability
              - content
    - $op: sys.call
      fn: obsidianRequest
      arg:
        method: POST
        path:
          $op: str.join
          values:
            # This path will save file to the `web` folder
            - /vault/web/
            - $op: str.replaceByRegExp
              value:
                $op: get
                key:
                  - readability
                  - title
              pattern: "[/\\?%*:|\"<>#]"
              replacement: ""
            - ".md"
        headers:
          Content-Type: text/markdown
        body:
          $op: template.render
          template: |
            ---
            page-title: {{json readability.title}}
            url: {{url}}
            published: "{{metadata.publishedDate}}"
            modified: "{{metadata.modifiedDate}}"
            date: "{{metadata.date}}"
            description: {{json readability.excerpt}}
            author: {{readability.byline}}
            image: {{metadata.image}}
            reviewed: false
            ---
            {{#if selection}}

            {{quote selection}}
            {{/if}}

            {{text}}
